[{"path":"/home/clinux01/eci-t3/lab3/mul_array_sycl_optimized.cc", "name":"mul_array_sycl_optimized.cc", "has_active_debug_locs":false, "absName":"/home/clinux01/eci-t3/lab3/mul_array_sycl_optimized.cc", "content":"#include <iostream>\u000A#include <random>\u000A#include <vector>\u000A\u000A#include <CL/sycl.hpp>\u000A\u000Anamespace {\u000A    constexpr size_t n = 1024;\u000A};\u000A\u000Aclass optimized;\u000A\u000Aauto main() -> int {\u000A    std::vector<float> A, res(1);\u000A\u000A    A.reserve(n);\u000A\u000A    std::random_device rd;\u000A    std::mt19937 gen(rd());\u000A    std::uniform_real_distribution<float> dis(0.0f, 0.25f);\u000A\u000A    float value = dis(gen);\u000A    A.push_back(value);\u000A\u000A    for (size_t i = 1; i < n; ++i) {\u000A	    A.push_back(A[0] + static_cast<float>(i)/static_cast<float>(n));\u000A    }\u000A\u000A    sycl::queue q;\u000A    sycl::buffer<float> A_b {A}, res_b {res};\u000A    q.submit([&](sycl::handler &h) {\u000A        auto A_a = A_b.get_access(h, sycl::read_only);\u000A        auto res_a = res_b.get_access(h, sycl::write_only);\u000A\u000A        h.single_task<class optimized>([=]() {\u000A            const size_t m = 5; // ( ͡° ͜ʖ ͡°)\u000A            float sh_reg[m] = {1.0};\u000A\u000A            for (size_t i = 0; i < n; ++i) {\u000A                float cur = A_a[i] * sh_reg[m-1];\u000A\u000A                #pragma unroll\u000A                for (size_t k = m-1; k; --k) {\u000A                    sh_reg[k] = sh_reg[k-1];\u000A                }\u000A\u000A                sh_reg[0] = cur;\u000A            }\u000A\u000A            float acc = 1.0;\u000A\u000A            #pragma unroll\u000A            for (size_t k = 0; k < m; ++k) {\u000A                acc *= sh_reg[k];\u000A            }\u000A\u000A            res_a[0] = acc;\u000A        });\u000A    }).wait();\u000A\u000A    std::cout << \"res[0] = \" << res[0] << std::endl;\u000A}\u000A"}, {"path":"/media/libre/oneapi/tbb/2021.6.0/include/tbb/tbb.h", "name":"tbb.h", "has_active_debug_locs":false, "absName":"/media/libre/oneapi/tbb/2021.6.0/include/tbb/tbb.h", "content":"/*\u000A    Copyright (c) 2005-2021 Intel Corporation\u000A\u000A    Licensed under the Apache License, Version 2.0 (the \"License\");\u000A    you may not use this file except in compliance with the License.\u000A    You may obtain a copy of the License at\u000A\u000A        http://www.apache.org/licenses/LICENSE-2.0\u000A\u000A    Unless required by applicable law or agreed to in writing, software\u000A    distributed under the License is distributed on an \"AS IS\" BASIS,\u000A    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\u000A    See the License for the specific language governing permissions and\u000A    limitations under the License.\u000A*/\u000A\u000A#include \"../oneapi/tbb.h\"\u000A"}]